# Datatables column definition:
# This entrie define specific columns used in datatables in the reporting app
column_def:
    bam_file_reads:           { data: 'bam_file_reads',                       title: 'Initial reads in bam',     fmt: { type: 'int',   min: 1500 } }
    barcode:                  { data: 'barcode',                              title: 'Barcode' }
    clean_pc_q30:             { data: 'clean_pc_q30',                         title: '% Q30 - cleaned',          fmt: { type: 'percentage', min: 75 } }
    clean_pc_q30_r1:          { data: 'clean_pc_q30_r1',                      title: '% Q30 R1 - cleaned',           visible: 'false',       fmt: { type: 'percentage', min: 75 } }
    clean_pc_q30_r2:          { data: 'clean_pc_q30_r2',                      title: '% Q30 R2 - cleaned',           visible: 'false',       fmt: { type: 'percentage', min: 75 } }
    clean_yield_in_gb:        { data: 'clean_yield_in_gb',                    title: 'Yield (Gb - cleaned)',     fmt: { type: 'float' } }
    clean_yield_q30_in_gb:    { data: 'clean_yield_q30_in_gb',                title: 'Yield Q30 (Gb - cleaned)', fmt: { type: 'float',  min: 770 } }
    clean_yield_q30:          { data: 'clean_yield_q30',                      title: 'Yield Q30 (Gb - cleaned)', fmt: { type: 'float' } }
    _created:                 { data: '_created',                             title: 'Created' }
    cv:                       { data: 'cv',                                   title: 'Coefficient of variance',  fmt: { type: 'float' } }
    delivered:                { data: 'delivered',                            title: 'Delivered'}
    duplicate_reads:          { data: 'duplicate_reads',                      title: '# duplicate reads',        visible: 'false',        fmt: { type: 'int',   min: 1500 } }
    lane_pc_optical_dups:     { data: 'lane_pc_optical_dups',                 title: 'Estimated dupl rate',      fmt: { type: 'float', max: 20 } }
    lane_number:              { data: 'lane_number',                          title: 'Lane' }
    library_id:               { data: 'library_id',                           title: 'Library ID' }
    library_type:             { data: 'library_type',                         title: 'Library',                  visible: 'false' }
    genotype_match:           { data: 'genotype_match',                       title: 'Genotype'   }
    mapped_reads:             { data: 'mapped_reads',                         title: '# mapped reads',           visible: 'false',           fmt: { type: 'int',   min: 1500 } }
    matching_snps:            { data: 'genotype_validation.matching_snps',    title: 'Matching snps' ,           visible: 'false'}
    median_coverage:          { data: 'median_coverage',                      title: 'Median coverage',          fmt: { type: 'float', min: 30 } }
    coverage_15X:             { data: 'coverage',                             title: '% covered 15X',            fmt: { name: 'coverage_15X', type: 'percentage', min: 85 } }
    evenness:                 { data: 'coverage.evenness',                    title: '% Evenness',               fmt: { type: 'ratio_percentage', min: .8 } }
    mismatching_snps:         { data: 'genotype_validation.mismatching_snps', title: 'Mismatching snps' ,           visible: 'false'}
    nb_quoted_samples:        { data: 'nb_quoted_samples',                    title: 'Quoted Samples' , class_name: 'text-center sum' }
    nb_samples_delivered:     { data: 'nb_samples_delivered',                 title: 'Samples Delivered' }
    nb_samples:               { data: 'nb_samples',                           title: 'Nb of Samples' }
    nb_samples_reviewed:      { data: 'nb_samples_reviewed',                  title: 'Samples Reviewed' }
    nb_sample_submission:     { data: 'sample_submission',                    title: 'Sample Submission' ,       fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_sample_qc:             { data: 'sample_qc',                            title: 'Sample QC' ,               fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_library_queue:         { data: 'library_queue',                        title: 'Library Queue' ,           fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_library_preparation:   { data: 'library_preparation',                  title: 'Library Preparation' ,     fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_sequencing_queue:      { data: 'sequencing_queue',                     title: 'Sequencing Queue' ,        fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_sequencing:            { data: 'sequencing',                           title: 'Sequencing' ,              fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_bioinformatics:        { data: 'bioinformatics',                       title: 'Bioinformatics' ,          fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_delivery:              { data: 'delivery',                             title: 'Delivery' ,                fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_finished:              { data: 'finished',                             title: 'Finished' ,                fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum' }
    nb_genotyped:             { data: 'genotyped',                            title: 'Genotyped' ,               fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum', visible: 'false' }
    nb_invoiced:              { data: 'invoiced',                             title: 'Invoiced' ,                fmt: {link_format_function: 'count_entities', link: '/sample/' }, class_name: 'text-center sum', visible: 'false' }
    no_call_chip:             { data: 'genotype_validation.no_call_chip',     title: 'No-call (chip)' ,          visible: 'false'}
    no_call_seq:              { data: 'genotype_validation.no_call_seq',      title: 'No-call (seq)' ,           visible: 'false'}
    called_gender:            { data: 'called_gender',                        title: 'Called Gender' ,           visible: 'false'}
    provided_gender:          { data: 'provided_gender',                      title: 'Provided Gender',          visible: 'false' }
    gender_match:             { data: 'gender_match',                         title: 'Gender' }
    passing_filter_reads:     { data: 'passing_filter_reads',                 title: 'Passing-filter reads',     fmt: { type: 'int',    min: 1500 } }
    pc_callable:              { data: 'pc_callable',                          title: '% callable',               visible: 'false' ,   fmt: { type: 'percentage', min: 70 } }
    pc_duplicate_reads:       { data: 'pc_duplicate_reads',                   title: '% duplicate reads',        fmt: { type: 'percentage', max: 20 } }
    pc_mapped_reads:          { data: 'pc_mapped_reads',                      title: '% mapped reads',           fmt: { type: 'percentage', min: 70 } }
    pc_pass_filter:           { data: 'pc_pass_filter',                       title: '% Pass filter',            fmt: { type: 'percentage' } }
    pc_properly_mapped_reads: { data: 'pc_properly_mapped_reads',             title: '% properly mapped reads',  visible: 'false',  fmt: { type: 'percentage', min: 70 } }
    pc_q30:                   { data: 'pc_q30',                               title: '%Q30',                     fmt: { type: 'percentage',  min: 75 } }
    pc_q30_r1:                { data: 'pc_q30_r1',                            title: '%Q30 R1',                  fmt: { type: 'percentage',  min: 75 } }
    pc_q30_r2:                { data: 'pc_q30_r2',                            title: '%Q30 R2',                  fmt: { type: 'percentage',  min: 75 } }
    pc_reads_in_lane:         { data: 'pc_reads_in_lane',                     title: '% Reads in lane',          fmt: { type: 'percentage', min: 70   } }
    proc_status:              { data: 'proc_status',                          title: 'Status' }
    project_id:               { data: 'project_id',                           title: 'Project ID',               fmt: { link: '/projects/' }  }
    project_ids:              { data: 'project_ids',                          title: 'Projects',                 fmt: { link: '/projects/' } }
    plate_id:                 { data: 'plate_id',                             title: 'Plate'                     }
    properly_mapped_reads:    { data: 'properly_mapped_reads',                title: '# properly mapped reads',  visible: 'false' ,  fmt: { type: 'int',   min: 1500 } }
    reviewed:                 { data: 'reviewed',                             title: 'Review status' }
    review_statuses:          { data: 'review_statuses',                      title: 'Review' }
    run_id:                   { data: 'run_id',                               title: 'Run ID',                   fmt: { link: '/run/' } }
    run_ids:                  { data: 'run_ids',                              title: 'Run ids',                  fmt: { link: '/run/' } }
    sample_id:                { data: 'sample_id',                            title: 'Sample ID',                fmt: { link: '/sample/' } }
    sample_ids:               { data: 'sample_ids',                           title: 'Sample list',              fmt: { link: '/sample/' } }
    freemix:                  { data: 'sample_contamination.freemix',         title: 'Freemix',                  fmt: { type: 'float',  max: .03}  }
    species_found:            { data: 'species_contamination',                title: 'Species found',            fmt: { name: 'species_contamination' } }
    species:                  { data: 'species',                              title: 'Species',                   visible: 'false'}
    useable:                  { data: 'useable',                              title: 'Useable' }
    useable_statuses:         { data: 'useable_statuses',                     title: 'Useable'}
    user_sample_id:           { data: 'user_sample_id',                       title: 'User sample ID' }
    yield_in_gb:              { data: 'yield_in_gb',                          title: 'Yield (Gb)',               fmt: { type: 'float',  min: 120 } }
    yield_q30_in_gb:          { data: 'yield_q30_in_gb',                      title: 'Yield Q30(Gb)',            fmt: { type: 'float',  min: 95 } }
    reseacher:                { data: 'researcher_name',                      title: 'Researcher',               visible: 'false' }
    open_date:                { data: 'open_date',                            title: 'Open Since',               fmt: { type: 'date' } }
    finished_date:            { data: 'finished_date',                        title: 'Date finished',            visible: 'false', fmt: { type: 'date' } }
    started_date:             { data: 'started_date',                         title: 'Date started',             visible: 'false', fmt: { type: 'date' } }

# Datatables tables definition
# the remaining top level entries each define a table with a list of column
# each column can be customised by entering a dict with a key called 'column_def' instead of the columns name
runs:
    - run_id
    - project_ids
    - pc_q30_r1
    - pc_q30_r2
    - pc_q30
    - clean_yield_in_gb
    - clean_yield_q30_in_gb
    - proc_status
    - review_statuses
    - useable_statuses


projects:
    - project_id
    - nb_samples
    - nb_samples_reviewed
    - nb_samples_delivered
    - _created

project_status:
    - project_id
    - reseacher
    - nb_quoted_samples
    - species
    - library_type
    - nb_invoiced
    - nb_genotyped
    - open_date
    - started_date
    - finished_date
    - nb_sample_submission
    - nb_sample_qc
    - nb_library_queue
    - nb_library_preparation
    - nb_sequencing_queue
    - nb_sequencing
    - nb_bioinformatics
    - nb_delivery
    - nb_finished

plate_status:
    - project_id
    - plate_id
    - species
    - library_type
    - nb_invoiced
    - nb_genotyped
    - nb_sample_submission
    - nb_sample_qc
    - nb_library_queue
    - nb_library_preparation
    - nb_sequencing_queue
    - nb_sequencing
    - nb_bioinformatics
    - nb_delivery
    - nb_finished

demultiplexing:
    - barcode
    - project_id
    - sample_id
    - passing_filter_reads
    - {column_def: 'yield_in_gb',  fmt: { type: 'float' }, visible: 'false' }
    - {column_def: 'clean_yield_in_gb',  fmt: { type: 'float' }, visible: 'true' }
    - {column_def: 'yield_q30_in_gb',  fmt: { type: 'float'}, visible: 'false' }
    - {column_def: 'clean_yield_q30_in_gb',  fmt: { type: 'float' }, visible: 'true' }
    - pc_q30_r1
    - pc_q30_r2
    - lane_pc_optical_dups
    - reviewed
    - useable

lane_aggregation:
    - lane_number
    - sample_ids
    - passing_filter_reads
    - pc_pass_filter
    - {column_def: 'yield_in_gb',  fmt: { type: 'float',  min: 120 }, visible: 'false' }
    - {column_def: 'clean_yield_in_gb',  fmt: { type: 'float',  min: 120 }, visible: 'true' }
    - {column_def: 'yield_q30_in_gb',  fmt: { type: 'float',  min: 95 }, visible: 'false' }
    - {column_def: 'clean_yield_q30_in_gb',  fmt: { type: 'float',  min: 95 }, visible: 'true' }
    - pc_q30
    - pc_q30_r1
    - pc_q30_r2
    - lane_pc_optical_dups
    - {column_def: 'cv',  visible: 'false' }
    - review_statuses
    - useable_statuses



unexpected_barcodes:
    - barcode
    - passing_filter_reads
    - pc_reads_in_lane


samples:
    - sample_id
    - user_sample_id
    - clean_yield_in_gb
    - clean_yield_q30
    - clean_pc_q30_r1
    - clean_pc_q30_r2
    - clean_pc_q30
    - run_ids
    - bam_file_reads
    - mapped_reads
    - pc_mapped_reads
    - properly_mapped_reads
    - pc_properly_mapped_reads
    - duplicate_reads
    - pc_duplicate_reads
    - median_coverage
    - coverage_15X
    - evenness
    - species_found
    - pc_callable
    - gender_match
    - called_gender
    - provided_gender
    - genotype_match
    - matching_snps
    - mismatching_snps
    - no_call_seq
    - no_call_chip
    - freemix
    - proc_status
    - reviewed
    - useable
    - {column_def: 'delivered',  visible: 'false' }


sample_run_elements:
    - run_id
    - lane_number
    - barcode
    - project_id
    - sample_id
    - passing_filter_reads
    - {column_def: 'yield_in_gb',  fmt: { type: 'float',  min: 120 } }
    - pc_q30_r1
    - pc_q30_r2
    - lane_pc_optical_dups
    - reviewed
    - useable
