runs:
    run_id: {                   type: 'string',  required: True,  unique: True }
    number_of_lanes: {          type: 'integer', required: False, min: 1, max: 8 }  # [1..8]
    run_elements: {             type: 'list',    required: False, schema: { type: 'string', data_relation: { resource: 'run_elements', field: 'run_element_id', embeddable: True } } }
    analysis_driver_procs: {    type: 'list',    required: False, schema: { type: 'string', data_relation: { resource: 'analysis_driver_procs', field: 'proc_id', embeddable: True } } }


lanes:
    lane_id: {                  type: 'string',  required: True,  unique: True}
    run_id: {                   type: 'string',  required: False }
    lane_number: {              type: 'integer', required: False, min: 1, max: 8 }
    run_elements: {             type: 'list',    required: False, schema: { type: 'string', data_relation: { resource: 'run_elements', field: 'run_element_id', embeddable: True } } }


run_elements:
    run_element_id: {           type: 'string',  required: True,  unique: True }

    run_id: {                   type: 'string',  required: True }
    lane: {                     type: 'integer', required: True }
    barcode: {                  type: 'string',  required: True }
    project_id: {               type: 'string',  required: True }

#   for now, treat sample_id and library_id as 1:1 equivalent
    library_id: {               type: 'string',  required: True }
    sample_id: {                type: 'string',  required: True }

    total_reads: {              type: 'integer', required: False }
    passing_filter_reads: {     type: 'integer', required: False }
    pc_reads_in_lane: {         type: 'float',   required: False }

    bases_r1: {                 type: 'integer', required: False }
    q30_bases_r1: {             type: 'integer', required: False }
    bases_r2: {                 type: 'integer', required: False }
    q30_bases_r2: {             type: 'integer', required: False }

    fastqc_report_r1: {         type: 'string',  required: False }
    fastqc_report_r2: {         type: 'string',  required: False }

    reviewed: {                 type: 'string',  required: False, allowed: ['not reviewed', 'pass', 'fail'] }
    useable: {                  type: 'string',  required: False, allowed: ['not marked', 'yes', 'no' ]}


unexpected_barcodes:
    run_element_id: {           type: 'string',  required: True,  unique: True }

    run_id: {                   type: 'string',  required: True }
    lane: {                     type: 'integer', required: True }
    barcode: {                  type: 'string',  required: True }
    passing_filter_reads: {     type: 'float',   required: False }
    pc_reads_in_lane: {         type: 'float',   required: False }


projects:
    project_id: {               type: 'string',  required: True,  unique: True }
    samples: {                  type: 'list',    required: False, schema: { type: 'string', data_relation: { resource: 'samples', field: 'sample_id', embeddable: False } } }


samples:
    library_id: {               type: 'string',  required: True  }
    project_id: {               type: 'string',  required: True  }
    sample_id: {                type: 'string',  required: True,  unique: True }
    user_sample_id: {           type: 'string',  required: False }

    bam_file_reads: {           type: 'integer', required: False }  # reads initially found in the bam file, used to be 'no adaptor reads'
    mapped_reads: {             type: 'integer', required: False }
    properly_mapped_reads: {    type: 'integer', required: False }
    duplicate_reads: {          type: 'integer', required: False }
    median_coverage: {          type: 'float',   required: False }
    pc_callable: {              type: 'float',   required: False }

    freemix: {                  type: 'float',   required: False }
    called_gender: {            type: 'string',  allowed: ['male', 'female', 'unknown'] }
    provided_gender: {          type: 'string',  allowed: ['male', 'female', 'unknown'] }
    reviewed: {                 type: 'string',  required: False, allowed: ['not reviewed', 'pass', 'fail'] }
    useable: {                  type: 'string',  required: False, allowed: ['not marked', 'yes', 'no' ]}

    run_elements: {             type: 'list',    required: False, schema: { type: 'string', data_relation: { resource: 'run_elements', field: 'run_element_id', embeddable: True } } }
    analysis_driver_procs: {    type: 'list',    required: False, schema: { type: 'string', data_relation: { resource: 'analysis_driver_procs', field: 'proc_id', embeddable: True } } }


analysis_driver_procs:
    proc_id: {                  type: 'string', required: True, unique: True }
    dataset_type: {             type: 'string', allowed: ['run', 'sample'] }
    dataset_name: {             type: 'string', required: True }
    start_date: {               type: 'datetime', required: True }
    end_date: {                 type: 'datetime' }
    pid: {                      type: 'integer' }
    status: {                   type: 'string', allowed: ['new', 'ready', 'force_ready', 'processing', 'finished', 'failed', 'aborted'] }

    stages: {                   type: 'list', schema: { type: 'dict', schema: { stage_name: { type: 'string' }, date_started: { type: 'datetime' }, date_finished: { type: 'datetime' } } } }
